{"version":3,"sources":["JS/script.js"],"names":["personalMovieDB","count","movies","actors","genres","privat","start","prompt","isNaN","alert","rememberMyFilms","i","a","b","length","console","log","detectPersonalLevel","writeYourGenres","toggleVisibleMyDB","showMyDB","hidden"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE,CADa;AAEpBC,EAAAA,MAAM,EAAE,EAFY;AAGpBC,EAAAA,MAAM,EAAE,EAHY;AAIpBC,EAAAA,MAAM,EAAE,EAJY;AAKpBC,EAAAA,MAAM,EAAE,IALY;AAMpBC,EAAAA,KAAK,EAAE,iBAAW;AACdN,IAAAA,eAAe,CAACC,KAAhB,GAAwBM,MAAM,CAAC,oCAAD,EAAuC,EAAvC,CAA9B;;AACA,WAAOP,eAAe,CAACC,KAAhB,IAAyB,EAAzB,IAA+BD,eAAe,CAACC,KAAhB,IAAyB,IAAxD,IAAgEO,KAAK,CAACR,eAAe,CAACC,KAAjB,CAA5E,EAAqG;AACjGQ,MAAAA,KAAK,CAAC,yDAAD,CAAL;AACAT,MAAAA,eAAe,CAACC,KAAhB,GAAwBM,MAAM,CAAC,oCAAD,EAAuC,EAAvC,CAA9B;AACH;AACJ,GAZmB;AAapBG,EAAAA,eAAe,EAAE,2BAAW;AACxB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIX,eAAe,CAACC,KAArC,EAA4CU,CAAC,EAA7C,EAAiD;AAC7C,UAAIC,CAAC,GAAG,IAAR;AAAA,UACIC,CAAC,GAAG,IADR;AAEAD,MAAAA,CAAC,GAAGL,MAAM,CAAC,0CAAD,EAA6C,EAA7C,CAAV;AACAM,MAAAA,CAAC,GAAGN,MAAM,CAAC,yBAAD,EAA4B,EAA5B,CAAV;;AAEA,UAAIK,CAAC,IAAI,IAAL,IAAaC,CAAC,IAAI,IAAlB,IAA0BD,CAAC,IAAI,EAA/B,IAAqCC,CAAC,IAAI,EAA1C,IAAgDD,CAAC,CAACE,MAAF,GAAW,EAA/D,EAAmE;AAC/Dd,QAAAA,eAAe,CAACE,MAAhB,CAAuBU,CAAvB,IAA4BC,CAA5B;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,OAHD,MAGO;AACHD,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAL,QAAAA,CAAC;AACJ;AACJ;AACJ,GA5BmB;AA6BpBM,EAAAA,mBAAmB,EAAE,+BAAW;AAC5B,QAAIjB,eAAe,CAACC,KAAhB,GAAwB,EAA5B,EAAgC;AAC5Bc,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH,KAFD,MAEO,IAAIhB,eAAe,CAACC,KAAhB,IAAyB,EAAzB,IAA+BD,eAAe,CAACC,KAAhB,GAAwB,EAA3D,EAA+D;AAClEc,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,KAFM,MAEA,IAAIhB,eAAe,CAACC,KAAhB,IAAyB,EAA7B,EAAiC;AACpCc,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,KAFM,MAEA;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ,GAvCmB;AAwCpBE,EAAAA,eAAe,EAAE,2BAAW;AACxB,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBX,MAAAA,eAAe,CAACI,MAAhB,CAAuBO,CAAC,GAAG,CAA3B,IAAiCA,CAAC,GAAG,IAAJ,GAAWJ,MAAM,gKAAiCI,CAAjC,OAAlD;AACH;AACJ,GA5CmB;AA6CpBQ,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B;AACAnB,IAAAA,eAAe,CAACK,MAAhB,IAA0B,KAA1B,GAAkCL,eAAe,CAACK,MAAhB,GAAyB,IAA3D,GAAkEL,eAAe,CAACK,MAAhB,GAAyB,KAA3F;AACA;AACH,GAjDmB;AAkDpBe,EAAAA,QAAQ,EAAE,kBAASC,MAAT,EAAiB;AACvB,QAAI,CAACA,MAAL,EAAa;AACTN,MAAAA,OAAO,CAACC,GAAR,CAAYhB,eAAZ;AACH;AACJ;AAtDmB,CAAxB,EAyDA;AACA;AACA;AACA;AACA;AACA","file":"script.38b0eb62.js","sourceRoot":"..","sourcesContent":["'user strict';\r\n\r\n/* Задание на урок:\r\n\r\n1) У нас уже есть рабочее приложение, состоящее из отдельных функций. Представьте, что\r\nперед вами стоит задача переписать его так, чтобы все функции стали методами объекта personalMovieDB\r\nТакое случается в реальных продуктах при смене технологий или подхода к архитектуре программы\r\n\r\n2) Создать метод toggleVisibleMyDB, который при вызове будет проверять свойство privat. Если оно false - он\r\nпереключает его в true, если true - переключает в false. Протестировать вместе с showMyDB.\r\n\r\n3) В методе writeYourGenres запретить пользователю нажать кнопку \"отмена\" или оставлять пустую строку. \r\nЕсли он это сделал - возвращать его к этому же вопросу. После того, как все жанры введены - \r\nпри помощи метода forEach вывести в консоль сообщения в таком виде:\r\n\"Любимый жанр #(номер по порядку, начиная с 1) - это (название из массива)\"*/\r\n\r\nconst personalMovieDB = {\r\n    count: 0,\r\n    movies: {},\r\n    actors: {},\r\n    genres: [],\r\n    privat: true,\r\n    start: function() {\r\n        personalMovieDB.count = prompt('Сколько фильмов вы уже посмотрели?', \"\");\r\n        while (personalMovieDB.count == '' || personalMovieDB.count == null || isNaN(personalMovieDB.count)) {\r\n            alert('Error. Ответ должен быть числом, и не может быть пустым');\r\n            personalMovieDB.count = prompt('Сколько фильмов вы уже посмотрели?', \"\");\r\n        }\r\n    },\r\n    rememberMyFilms: function() {\r\n        for (let i = 1; i <= personalMovieDB.count; i++) {\r\n            let a = null,\r\n                b = null;\r\n            a = prompt('Один из последних просмотренных фильмов?', '');\r\n            b = prompt('На сколько оцените его?', '');\r\n    \r\n            if (a != null && b != null && a != '' && b != '' && a.length < 50) {\r\n                personalMovieDB.movies[a] = b;\r\n                console.log('Done');\r\n            } else {\r\n                console.log('error');\r\n                i--;\r\n            }\r\n        }\r\n    },\r\n    detectPersonalLevel: function() {\r\n        if (personalMovieDB.count < 10) {\r\n            console.log(\"Просмотрено довольно мало фильмов\");\r\n        } else if (personalMovieDB.count >= 10 && personalMovieDB.count < 30) {\r\n            console.log(\"Вы классический зритель\");\r\n        } else if (personalMovieDB.count >= 30) {\r\n            console.log(\"Вы киноман\");\r\n        } else {\r\n            console.log(\"Произошла ошибка\");\r\n        }\r\n    },\r\n    writeYourGenres: function() {\r\n        for (let i = 1; i <= 3; i++) {\r\n            personalMovieDB.genres[i - 1] = (i + \". \" + prompt(`Ваш любимый жанр под номером ${i}?`));\r\n        }\r\n    },\r\n    toggleVisibleMyDB: function() {\r\n        /* jshint -W030 */\r\n        personalMovieDB.privat == false ? personalMovieDB.privat = true : personalMovieDB.privat = false;\r\n        /* jshint +W030 */\r\n    },\r\n    showMyDB: function(hidden) {\r\n        if (!hidden) {\r\n            console.log(personalMovieDB);\r\n        }\r\n    }\r\n};\r\n\r\n// personalMovieDB.start();\r\n// personalMovieDB.rememberMyFilms();\r\n// personalMovieDB.detectPersonalLevel();\r\n// personalMovieDB.writeYourGenres();\r\n// personalMovieDB.toggleVisibleMyDB();\r\n// personalMovieDB.showMyDB(personalMovieDB.privat);"]}